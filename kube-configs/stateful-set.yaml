apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: cluster
spec:
  serviceName: rabbitmq-cluster
  replicas: 7
  template:
    metadata:
      labels:
        run: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        resources:
          limits:
            memory: 1024Mi
          requests:
            memory: 512Mi
        image: gpolunin/rabbitmq:test
        ports:
        - containerPort: 5672
        - containerPort: 15672
        - containerPort: 4369
        - containerPort: 25672
        - containerPort: 55950
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-storage
        env:
#        - name: K8S_HOST
#          value: "rabbitmq.cluster.svc.cluster.local"
#        - name: K8S_SERVICE_NAME
#          value: "rabbitmq-cluster"
        - name: AUTOCLUSTER_TYPE
          value: "etcd"
        - name: ETCD_HOST
          value: "etcd"
        - name: RABBITMQ_ERLANG_COOKIE
          value: "cluster_cookie"
        - name: AUTOCLUSTER_CLEANUP
          value: "true"
        - name: CLEANUP_INTERVAL
          value: "60"
        - name: CLEANUP_WARN_ONLY
          value: "false"
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RABBITMQ_NODENAME
          value: rabbit@$(NODE_NAME).rabbitmq-cluster
        - name: HOSTNAME
          value: $(NODE_NAME).rabbitmq-cluster
#        - name: RABBITMQ_NODENAME
#          value: rabbit@$(NODE_NAME)
      volumes:
      - name: rabbitmq-storage
        hostPath:
          path: /mnt/kube_common/cluster-rabbitmq/data
#  volumeClaimTemplates:
#    - metadata:
#        name: rabbitmq-storage-claim
#        namespace: cluster
##        annotations:
##          volume.alpha.kubernetes.io/storage-class: anything
#      spec:
#        accessModes:
#          - ReadWriteMany
#        resources:
#          requests:
#            storage: 4Gi
